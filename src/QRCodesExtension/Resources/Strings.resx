<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CodesIndexPage_Title" xml:space="preserve">
    <value>QR codes</value>
  </data>
  <data name="CodesIndexPage_Name" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="CodesIndexPage_Placeholder" xml:space="preserve">
    <value>Search QR codes or type text of a new QR code</value>
  </data>
  <data name="CodesIndexPage_NewCode_Subtitle_Default" xml:space="preserve">
    <value>Create a new QR code from specified input</value>
  </data>
  <data name="CodesIndexPage_NewCode_Subtitle_NoInput" xml:space="preserve">
    <value>Create a new QR code</value>
  </data>
  <data name="CodesIndexPage_NewCode_Subtitle_WithInput" xml:space="preserve">
    <value>Create a new QR code from "{0}"</value>
  </data>
  <data name="CodesIndexPage_ClipboardPreview_Title" xml:space="preserve">
    <value>Create QR code from text in clipboard</value>
  </data>
  <data name="CodesIndexPage_ClipboardPreview_Subtitle" xml:space="preserve">
    <value>Generate a new QR code from the text content of the clipboard</value>
  </data>
  <data name="CodesIndexPage_ClipboardPreview_Empty" xml:space="preserve">
    <value>Clipboard is empty</value>
  </data>
  <data name="CodesIndexPage_ClipboardPreview_DetailsTitle" xml:space="preserve">
    <value>Clipboard content</value>
  </data>
  <data name="CodesIndexPage_Instant_Title" xml:space="preserve">
    <value>Create QR code instantly</value>
  </data>
  <data name="CodesIndexPage_Instant_Subtitle_Default" xml:space="preserve">
    <value>Generate a new QR code with default settings from the specified input</value>
  </data>
  <data name="CodesIndexPage_Instant_Subtitle_WithInput" xml:space="preserve">
    <value>Instant QR code from "{0}"</value>
  </data>
  <data name="CodesIndexPage_FromScreen_Title" xml:space="preserve">
    <value>Find QR code on screen</value>
  </data>
  <data name="CodesIndexPage_FromScreen_Subtitle" xml:space="preserve">
    <value>Scan all screens for a QR code and add it if one is found</value>
  </data>
  <data name="CodesIndexPage_FromClipboardImage_Title" xml:space="preserve">
    <value>Create QR code from image in clipboard</value>
  </data>
  <data name="CodesIndexPage_FromClipboardImage_Subtitle" xml:space="preserve">
    <value>Generate a new QR code from an image stored in the clipboard</value>
  </data>
  <data name="CodeCreatorPage_Title" xml:space="preserve">
    <value>Create QR code</value>
  </data>
  <data name="CodeCreatorPage_Name" xml:space="preserve">
    <value>Create a new QR code</value>
  </data>
  <data name="Commands_PreviewQrCode_Name" xml:space="preserve">
    <value>Preview QR code</value>
  </data>
  <data name="Commands_PreviewQrCode_NotFound" xml:space="preserve">
    <value>QR code image not found</value>
  </data>
  <data name="Commands_InstantQrCode_Name" xml:space="preserve">
    <value>Create instant QR code</value>
  </data>
  <data name="Commands_InstantQrCode_Success" xml:space="preserve">
    <value>QR code created successfully</value>
  </data>
  <data name="Commands_InstantQrCode_Failure_Format" xml:space="preserve">
    <value>Failed to create QR code: {0}</value>
  </data>
  <data name="Commands_CopyBitmapToClipboard_Name" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
  <data name="Commands_CopyBitmapToClipboard_Success" xml:space="preserve">
    <value>Copied QR code image to clipboard</value>
  </data>
  <data name="Commands_CopyBitmapToClipboard_Failure" xml:space="preserve">
    <value>Failed to copy QR code to clipboard</value>
  </data>
  <data name="Commands_GetFromBitmapQrCode_Success" xml:space="preserve">
    <value>QR code detected and added.</value>
  </data>
  <data name="Commands_GetFromBitmapQrCode_NotFound" xml:space="preserve">
    <value>QR code not found</value>
  </data>
  <data name="Commands_GetFromClipboardQrCode_NotFound" xml:space="preserve">
    <value>QR code not found in clipboard image</value>
  </data>
  <data name="CodeCreator_Input_Label" xml:space="preserve">
    <value>Text to encode</value>
  </data>
  <data name="CodeCreator_Input_Placeholder" xml:space="preserve">
    <value>Enter text to encode in QR code</value>
  </data>
  <data name="CodeCreator_ErrorCorrection_Label" xml:space="preserve">
    <value>Error correction level</value>
  </data>
  <data name="CodeCreator_ErrorCorrection_Choice_Low" xml:space="preserve">
    <value>Low (7 %)</value>
  </data>
  <data name="CodeCreator_ErrorCorrection_Choice_Medium" xml:space="preserve">
    <value>Medium (15 %)</value>
  </data>
  <data name="CodeCreator_ErrorCorrection_Choice_Quartile" xml:space="preserve">
    <value>Quartile (25 %)</value>
  </data>
  <data name="CodeCreator_ErrorCorrection_Choice_High" xml:space="preserve">
    <value>High (30 %)</value>
  </data>
  <data name="CodeCreator_ErrorCorrection_Placeholder" xml:space="preserve">
    <value>Select error correction level</value>
  </data>
  <data name="CodeCreator_ModuleSize_Label" xml:space="preserve">
    <value>Module size</value>
  </data>
  <data name="CodeCreator_Create_ActionTitle" xml:space="preserve">
    <value>Create QR code</value>
  </data>
  <data name="CodeCreator_Status_Creating" xml:space="preserve">
    <value>Creating QR code...</value>
  </data>
  <data name="CodeListItem_Generating" xml:space="preserve">
    <value>Generating...</value>
  </data>
  <data name="CodeListItem_Metadata_Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="CodeListItem_Metadata_CreatedAt" xml:space="preserve">
    <value>Created at</value>
  </data>
  <data name="CodeListItem_Metadata_ModuleSize" xml:space="preserve">
    <value>Module size</value>
  </data>
  <data name="CodeListItem_Metadata_ErrorCorrection" xml:space="preserve">
    <value>Error correction</value>
  </data>
  <data name="CodeListItem_Command_CopyBitmap" xml:space="preserve">
    <value>Copy QR code</value>
  </data>
  <data name="CodeListItem_Command_CopyValue" xml:space="preserve">
    <value>Copy QR code value</value>
  </data>
  <data name="CodeListItem_Command_Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="CodeListItem_Command_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="CodeListItem_Error_Generating_Format" xml:space="preserve">
    <value>Error generating QR code: {0}</value>
  </data>
  <data name="WorkingForm_Label" xml:space="preserve">
    <value>Working....</value>
  </data>
  <data name="WorkingForm_Text" xml:space="preserve">
    <value>Working...</value>
  </data>
  <data name="Settings_InstantQrCode_Ecc_Label" xml:space="preserve">
    <value>Instant QR code: default error correction</value>
  </data>
  <data name="Settings_InstantQrCode_Ecc_Description" xml:space="preserve">
    <value>Default error correction level used when creating instant QR codes.</value>
  </data>
  <data name="Settings_InstantQrCode_Ecc_Choice_Default" xml:space="preserve">
    <value>Default (Medium, 15%)</value>
  </data>
  <data name="Settings_InstantQrCode_ElementSize_Label" xml:space="preserve">
    <value>Instant QR code: default module size</value>
  </data>
  <data name="Settings_InstantQrCode_ElementSize_Description" xml:space="preserve">
    <value>Default size (in pixels) of a single QR code module.</value>
  </data>
  <data name="Settings_ShowIcons_Label" xml:space="preserve">
    <value>Show icons instead of QR code thumbnails in the list</value>
  </data>
  <data name="Settings_ShowIcons_Description" xml:space="preserve">
    <value>Display semantic icons instead of generated QR code thumbnails.</value>
  </data>
</root>